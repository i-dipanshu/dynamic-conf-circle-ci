version: 2.1

# This allows you to use CircleCI's dynamic configuration feature
setup: true

# The path-filtering orb is required to continue a pipeline based on
# the path of an updated file_set
orbs:
  path-filtering: circleci/path-filtering@1.0.0
  docker: circleci/docker@2.4.0

jobs: 
  extract-previous-remote-head-sha:
    executor: docker/docker
    steps:
      - checkout
      - run:
          name: Fetch and Extract Previous Remote Head SHA
          command: |
            git fetch origin
            echo $(git rev-parse origin/main@{1})
            echo 'export PREVIOUS_REMOTE_HEAD_SHA=$(git rev-parse origin/main@{1})' >> "$BASH_ENV"

workflows:
  # The generate-config workflow is always triggered, regardless of the pipeline parameters.
  generate-config:
    jobs:
      # The path-filtering/filter job determines which pipeline
      # parameters to update.
      - extract-previous-remote-head-sha
      - path-filtering/filter:
          # the base-revision is the main branch.
          # Any commit pushed to any development branch will
          # inherently yield a diff when compared to  main branch.
          # Once ready to deploy changes to production,
          # development is merged into main and pushed to GitHub.
          # The orb is smart enough to detect commits pushed to the same branch as the base-revision.
          # In this scenario, the orb compares the new commit against the previous commit on the main branch (aka HEAD~1).
          base-revision: $PREVIOUS_REMOTE_HEAD_SHA

          mapping: |
            backend/.* run-backend-workflow true 
            frontend/.* run-frontend-workflow true 

          # mapping: |
          #   backend/.* run-backend-workflow true .circleci/backend-workflow.yml
          #   frontend/.* run-frontend-workflow true .circleci/frontend-workflow.yml

          # # This is the path of the configuration that will trigger once
          # # path filtering and pipeline parameter value updates are complete.
          config-path: .circleci/workflow.yml